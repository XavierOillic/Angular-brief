{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.usersToDisplay = []; // J'initialise le tableau vide qui va contenir le tableau.\n    this.usersToDisplayTamp = []; // J'initialise le tableau Tampon vide qui va contenir le tableau temporaire.\n  }\n\n  filteredByBtn(eventFromFilter) {\n    console.log(`valeur du click chez le Parent ==> ${eventFromFilter}`);\n    this.selectByBtn = eventFromFilter;\n    this.usersToDisplayTamp.filter(UserModel => UserModel.name.first.includes(this.selectByText));\n  }\n  filteredByText(receivedSearch) {\n    console.log(`...dans  le PARENT ==>  ${receivedSearch.target.value}`);\n    console.log(`I apply this filter on ${this.usersToDisplay.length} Users`);\n    this.selectByText = receivedSearch.target.value; // je target la valeur transmise dès la saisie par le champ de recherche\n    this.usersToDisplayTamp = this.usersToDisplay.filter(UserModel => UserModel.name.first.toLowerCase().includes(this.selectByText));\n    // J'utilise USERMODEL (model) comme prédicat ?! dans le filtre.\n  }\n\n  ngOnInit() {\n    //console.log(this.dataService.getUsersData());\n    this.usersToDisplayTamp = [...this.dataService.getUsersData()];\n    this.usersToDisplay = [...this.dataService.getUsersData()]; // Copie par VALEUR.\n    //this.usersToDisplayTamp = this.dataService.getUsersData(); // Copie par REFERENCE.\n    //this.usersToDisplay = this.dataService.getUsersData();\n    //ce contenent vide, j'y stocke le tableau de données et sa méthode de récupération.\n    // On ne touche pas au parent CONTROLLEUR. NI BOUCHE NI OREILLE.\n    // Mais je déclare des proprieté : mon tableau initialisé à vide, que je peux appeller dans l'enfant.\n  }\n};\n\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}