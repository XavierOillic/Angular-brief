{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"./search-bar/search-bar.component\";\nimport * as i3 from \"./data-table/data-table.component\";\nimport * as i4 from \"./filter-selector/filter-selector.component\";\nexport class AppComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.usersToDisplay = []; // J'initialise le tableau vide qui va contenir le tableau.\n    this.usersToDisplayTamp = []; // J'initialise le tableau Tampon vide qui va contenir le tableau temporaire.\n  }\n\n  applyThisBtnFilter(eventFromFilter) {\n    console.log(`valeur du click chez le Parent ==> ${eventFromFilter}`);\n    /*this.selectByBtn = eventFromFilter ;\n    \n      if (this.selectByBtn == ) {\n      this.usersToDisplayTamp = this.usersToDisplay.filter((UserModel) =>\n      UserModel.name.first.toLowerCase().includes();\n      );\n    \n    \n    }\n    \n    transmitSearchToTs (receivedSearch: any) {\n        console.log(`je Suis dans  le PARENT ==>  ${receivedSearch.target.value}`);\n    \n        let searchUser: string = receivedSearch.target.value; // je target la valeur transmise dès la saisie par le champ de recherche\n    \n        this.usersToDisplayTamp = this.usersToDisplay.filter((UserModel) =>\n        UserModel.name.first.toLowerCase().includes(searchUser)\n        );\n        // J'utilise USERMODEL (model) comme prédicat ?! dans le filtre.\n      }\n    \n      ngOnInit() {\n        //console.log(this.dataService.getUsersData());\n    \n        this.usersToDisplayTamp = this.dataService.getUsersData();\n        this.usersToDisplay = this.dataService.getUsersData();\n        \n        //ce contenent vide, j'y stocke le tableau de données et sa méthode de récupération.\n        // On ne touche pas au parent CONTROLLEUR. NI BOUCHE NI OREILLE.\n        // Mais je déclare des proprieté : mon tableau initialisé à vide, que je peux appeller dans l'enfant.\n      }\n    }\n    \n     \n    }\n    static { this.ɵfac = function AppComponent_Factory(t) { return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.DataService)); }; }\n    static { this.ɵcmp = /*@__PURE__*/\n    i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      decls: 8,\n      vars: 1,\n      consts: [[1, \"container\"], [3, \"searchToParent\"], [3, \"filtrationBtnFromChild\"], [3, \"dataUser\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Exercices Binding Angular\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"h2\");\n          i0.ɵɵtext(4, \"Mini App\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"app-search-bar\", 1);\n          i0.ɵɵlistener(\"searchToParent\", function AppComponent_Template_app_search_bar_searchToParent_5_listener($event) {\n            return ctx.transmitSearchToTs($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"app-filter-selector\", 2);\n          i0.ɵɵlistener(\"filtrationBtnFromChild\", function AppComponent_Template_app_filter_selector_filtrationBtnFromChild_6_listener($event) {\n            return ctx.applyThisBtnFilter($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"app-data-table\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"dataUser\", ctx.usersToDisplayTamp);\n        }\n      },\n      dependencies: [i2.SearchBarComponent, i3.DataTableComponent, i4.FilterSelectorComponent],\n      styles: [\".container[_ngcontent-%COMP%]{margin:30px}\"]\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}