{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"./search-bar/search-bar.component\";\nimport * as i3 from \"./data-table/data-table.component\";\nimport * as i4 from \"./filter-selector/filter-selector.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(dataService) {\n      this.dataService = dataService;\n      this.usersToDisplay = []; // J'initialise le tableau vide qui va contenir le tableau.\n      this.usersToDisplayTamp = []; // J'initialise le tableau Tampon vide qui va contenir le tableau temporaire.\n      this.selectByBtn = 'first'; // J'initialisee la propriété qui stocke la valeur du bouton cliqué \n      this.selectByText = ''; //J'initialise la propriété qui stocke la valeur de la saisie texte\n    }\n    // RECUPERE et STOCKE LA VALEUR des BOUTON.\n    filteredByBtn(eventFromFilter) {\n      console.log(`valeur du click chez le Parent ==> ${eventFromFilter}`);\n      console.log(this.selectByBtn);\n      this.selectByBtn = eventFromFilter;\n      this.generalFilter();\n    }\n    // RECUPERE et STOCKE LA VALEUR du TEXTE.\n    filteredByText(receivedSearch) {\n      console.log(`...dans  le PARENT ==>  ${receivedSearch.target.value}`);\n      console.log(`I apply this filter on ${this.usersToDisplay.length} Users`);\n      this.selectByText = receivedSearch.target.value; // je target la valeur transmise dès la saisie par le champ de recherche\n      this.generalFilter();\n    }\n    // Fait le travail de FILTRE GRACE AUX VALEURS RECUPEREES.\n    generalFilter() {\n      this.usersToDisplayTamp = this.usersToDisplay.filter(UserModel => UserModel.name[this.selectByBtn].toLowerCase().includes(this.selectByText));\n      // ==> CE TAB TEMP. est égal au TAB FIXE filtré selon le mod\n      // J'utilise USERMODEL (model) comme prédicat ?! dans le filtre. \n      // \n    }\n\n    ngOnInit() {\n      //console.log(this.dataService.getUsersData());\n      this.usersToDisplayTamp = [...this.dataService.getUsersData()];\n      this.usersToDisplay = [...this.dataService.getUsersData()]; // Copie par VALEUR.\n      //this.usersToDisplayTamp = this.dataService.getUsersData(); // Copie par REFERENCE.\n      //this.usersToDisplay = this.dataService.getUsersData();\n      //ce contenent vide, j'y stocke le tableau de données et sa méthode de récupération.\n      // On ne touche pas au parent CONTROLLEUR. NI BOUCHE NI OREILLE.\n      // Mais je déclare des proprieté : mon tableau initialisé à vide, que je peux appeller dans l'enfant.\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      decls: 8,\n      vars: 1,\n      consts: [[1, \"container\"], [3, \"searchToParent\"], [3, \"filtrationBtnFromChild\"], [3, \"dataUser\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Exercices Binding Angular\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"h2\");\n          i0.ɵɵtext(4, \"Mini App\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"app-search-bar\", 1);\n          i0.ɵɵlistener(\"searchToParent\", function AppComponent_Template_app_search_bar_searchToParent_5_listener($event) {\n            return ctx.filteredByText($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"app-filter-selector\", 2);\n          i0.ɵɵlistener(\"filtrationBtnFromChild\", function AppComponent_Template_app_filter_selector_filtrationBtnFromChild_6_listener($event) {\n            return ctx.filteredByBtn($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"app-data-table\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"dataUser\", ctx.usersToDisplayTamp);\n        }\n      },\n      dependencies: [i2.SearchBarComponent, i3.DataTableComponent, i4.FilterSelectorComponent],\n      styles: [\".container[_ngcontent-%COMP%]{margin:30px}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}